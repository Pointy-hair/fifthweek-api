<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="$(SolutionDir)$(ProjectName)\VisualStudioHelper.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    // get a reference to the project of this t4 template
    var project = VisualStudioHelper.CurrentProject;
    // get all class items from the code model
    var allClasses = VisualStudioHelper.CodeModel.GetAllCodeElementsOfType(project.CodeModel.CodeElements, EnvDTE.vsCMElement.vsCMElementClass, false);

    // iterate all classes
    foreach(EnvDTE.CodeClass codeClass in allClasses)
    {
		if (codeClass.Attributes.OfType<EnvDTE.CodeAttribute>().All(_ => !_.Name.StartsWith("AutoEqualityMembers")))
        {
			continue;
        }

		var publicProperties = codeClass.Members
			.Cast<EnvDTE.CodeElement>()
			.Where(ce => ce.Kind == EnvDTE.vsCMElement.vsCMElementProperty)
			.Cast<EnvDTE.CodeProperty>()
			.Where(p => p.Access == EnvDTE.vsCMAccess.vsCMAccessPublic)
			.ToArray();

		if (publicProperties.Length == 0)
        {
			continue;
        }
#>
namespace <#= codeClass.Namespace.Name #>
{
	public partial class <#= codeClass.Name #>
	{
		public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != this.GetType())
            {
                return false;
            }

            return this.Equals((<#= codeClass.Name #>)obj);
        }

		public override int GetHashCode()
        {
            unchecked
            {
                int hashCode = 0;
<#
    foreach(EnvDTE.CodeProperty codeProperty in publicProperties)
    {
#>
				hashCode = (hashCode * 397) ^ (this.<#= codeProperty.Name #> != null ? this.<#= codeProperty.Name #>.GetHashCode() : 0);
<#
    }
#>
                return hashCode;
            }
        }

		protected bool Equals(ConfirmPasswordResetCommand other)
        {
<#
    foreach(EnvDTE.CodeProperty codeProperty in publicProperties)
    {
#>
			if (!object.Equals(this.<#= codeProperty.Name #>, other.<#= codeProperty.Name #>))
			{
				return false;
			}
<#
    }
#>
			return true;
        }
	}
}
<#
    }

#>