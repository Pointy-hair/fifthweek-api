<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    // iterate all classes
    foreach(EnvDTE.CodeClass codeClass in allClasses)
    {
		var allAttributes = GetAllAttributes(codeClass);
		if (allAttributes.OfType<EnvDTE.CodeAttribute>().All(_ => !_.Name.StartsWith("AutoEqualityMembers")))
        {
			continue;
        }

		var allProperties = GetAllProperties(codeClass);
		var publicProperties = allProperties
			.OfType<EnvDTE.CodeProperty>()
			.Where(p => p.Access == EnvDTE.vsCMAccess.vsCMAccessPublic)
			.ToArray();

		if (publicProperties.Length == 0)
        {
			continue;
        }
#>
namespace <#= codeClass.Namespace.Name #>
{
	public partial class <#= codeClass.Name #>
	{
		public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != this.GetType())
            {
                return false;
            }

            return this.Equals((<#= codeClass.Name #>)obj);
        }

		public override int GetHashCode()
        {
            unchecked
            {
                int hashCode = 0;
<#
    foreach(EnvDTE.CodeProperty codeProperty in publicProperties)
    {
#>
				hashCode = (hashCode * 397) ^ (this.<#= codeProperty.Name #> != null ? this.<#= codeProperty.Name #>.GetHashCode() : 0);
<#
    }
#>
                return hashCode;
            }
        }

		protected bool Equals(<#= codeClass.Name #> other)
        {
<#
    foreach(EnvDTE.CodeProperty codeProperty in publicProperties)
    {
#>
			if (!object.Equals(this.<#= codeProperty.Name #>, other.<#= codeProperty.Name #>))
			{
				return false;
			}
<#
    }
#>
			return true;
        }
	}
}
<#
    }
#>