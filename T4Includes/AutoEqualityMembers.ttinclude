<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    // iterate all classes
    foreach(CodeClass codeClass in allClasses)
    {
		var classUtility = new ClassUtility(codeClass, this, VisualStudioHelper);

        var allAttributes = classUtility.GetAllAttributes();
        if (allAttributes.All(_ => !_.Name.StartsWith("AutoEqualityMembers")))
        {
            continue;
        }

        var publicProperties = classUtility.GetAllPublicGetters();
        if (publicProperties.Count == 0)
        {
            continue;
        }

		classUtility.WriteNamespaceAndClass(() => {
#>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != this.GetType())
            {
                return false;
            }

            return this.Equals((<#= codeClass.Name #>)obj);
        }

        public override int GetHashCode()
        {
            unchecked
            {
                int hashCode = 0;
<#
    foreach(CodeProperty codeProperty in publicProperties)
    {
#>
                hashCode = (hashCode * 397) ^ (this.<#= codeProperty.Name #> != null ? this.<#= codeProperty.Name #>.GetHashCode() : 0);
<#
    }
#>
                return hashCode;
            }
        }

        protected bool Equals(<#= codeClass.Name #> other)
        {
<#
    foreach(CodeProperty codeProperty in publicProperties)
    {
#>
            if (!object.Equals(this.<#= codeProperty.Name #>, other.<#= codeProperty.Name #>))
            {
                return false;
            }
<#
    }
#>
            return true;
        }
<#
		});
	}
#>