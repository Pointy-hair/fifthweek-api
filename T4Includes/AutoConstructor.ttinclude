<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#
    foreach(UnifiedClass unifiedClass in allClasses)
    {
        var allAttributes = unifiedClass.GetAllAttributes();
        if (allAttributes.All(_ => !_.Name.StartsWith("AutoConstructor")))
        {
            continue;
        }

        var publicProperties = unifiedClass.GetAllPublicGetters();
        if (publicProperties.Count == 0)
        {
            continue;
        }

        var requiredNullableProperties = publicProperties.Where(p => p.Attributes.OfType<CodeAttribute>().All(_ => !_.Name.StartsWith("Optional")));

		unifiedClass.WriteNamespaceAndClass(() => {
#>
        public <#= unifiedClass.FirstCodeClass.Name #>(
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
            <#= codeProperty.Type.AsFullName #> <#= ToLowerCamelCase(codeProperty.Name) #><#= i < publicProperties.Count - 1 ? ", " : ")" #>
<#
    }
#>
        {
<#
    foreach(CodeProperty codeProperty in requiredNullableProperties)
    {
#>
            if (<#= ToLowerCamelCase(codeProperty.Name) #> == null)
            {
                throw new ArgumentNullException("<#= ToLowerCamelCase(codeProperty.Name) #>");
            }

<#
    }

    foreach(CodeProperty codeProperty in publicProperties)
    {
#>
            this.<#= codeProperty.Name #> = <#= ToLowerCamelCase(codeProperty.Name) #>;
<#
    }
#>
        }
<#
        });
    }
#>
