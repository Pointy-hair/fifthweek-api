<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    var AutoCopyAttributeName = "AutoCopy";
	var RequiresBuilderAttributeParameterName = "RequiresBuilder";

    foreach(UnifiedClass unifiedClass in allClasses)
    {
        var allAttributes = unifiedClass.GetAllAttributes();
		var autoCopyAttribute = allAttributes.FirstOrDefault(_ => _.Name.StartsWith(AutoCopyAttributeName));
        if (autoCopyAttribute == null)
        {
            continue;
        }

        var parameters = AutoConstructorParameter.GetParametersForClass(unifiedClass);
        if (parameters.Count == 0)
        {
            continue;
        }

		var attributeParameters = ParseAttribute(autoCopyAttribute.Value);
		var requiresBuilder = TryParseAttributeFlagParameter(RequiresBuilderAttributeParameterName, attributeParameters, true);

        unifiedClass.WriteNamespaceAndClass(() => {

			if (requiresBuilder)
			{
#>
        public Builder ToBuilder()
        {
            var builder = new Builder();
<#
    for (var i = 0; i < parameters.Count; i++)
    {
        var parameter = parameters[i];
#>
            builder.<#= parameter.AssigneeName #> = this.<#= parameter.AssigneeName #>;
<#
    }
#>
            return builder;
        }

        public <#= unifiedClass.FirstCodeClass.Name #> Copy(Action<Builder> applyDelta)
        {
            var builder = this.ToBuilder();
            applyDelta(builder);
            return builder.Build();
        }

        public partial class Builder
        {
<#
    for (var i = 0; i < parameters.Count; i++)
    {
        var parameter = parameters[i];
#>
            public <#= parameter.TypeName #> <#= parameter.AssigneeName #> { get; set; }
<#
    }
#>

            public <#= unifiedClass.FirstCodeClass.Name #> Build()
            {
                return new <#= unifiedClass.FirstCodeClass.Name #>(
<#
    for (var i = 0; i < parameters.Count; i++)
    {
        var parameter = parameters[i];
#>
                    this.<#= parameter.AssigneeName #><#= i < parameters.Count - 1 ? ", " : ");" #>
<#
    }
#>
            }
        }
<#
			}
			else
            {
#>
        public <#= unifiedClass.FirstCodeClass.Name #> Copy()
        {
            var copy = new <#= unifiedClass.FirstCodeClass.Name #>();
<#
    for (var i = 0; i < parameters.Count; i++)
    {
        var parameter = parameters[i];
#>
            copy.<#= parameter.AssigneeName #> = this.<#= parameter.AssigneeName #>;
<#
    }
#>
            return copy;
        }

        public Post Copy(Action<<#= unifiedClass.FirstCodeClass.Name #>> applyDelta)
        {
            var copy = this.Copy();
            applyDelta(copy);
            return copy;
        }
<#
            }
        });
    }
#>