<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#
    // iterate all classes
    foreach(CodeClass codeClass in allClasses)
    {
		var classUtility = new ClassUtility(codeClass, this, VisualStudioHelper);

        var allAttributes = classUtility.GetAllAttributes();
        if (allAttributes.All(_ => !_.Name.StartsWith("AutoBuilder")))
        {
            continue;
        }

        var publicProperties = classUtility.GetAllPublicGetters();
        if (publicProperties.Count == 0)
        {
            continue;
        }

		classUtility.WriteNamespaceAndClass(() => {
#>
		public static <#= codeClass.Name #> Build(Builder builder)
		{
			return new <#= codeClass.Name #>(
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
				builder.<#= codeProperty.Name #><#= i < publicProperties.Count - 1 ? ", " : ");" #>
<#
    }
#>
		}

        public partial class Builder
        {
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
            public <#= codeProperty.Type.AsFullName #> <#= codeProperty.Name #> { get; set; }
<#
    }
#>
        }
<#
		});
	}
#>