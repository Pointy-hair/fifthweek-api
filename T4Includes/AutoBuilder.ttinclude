<#@ include file="VisualStudioHelper.ttinclude" once="true" #>
<#@ include file="VisualStudioHelper2.ttinclude" once="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#
    foreach(UnifiedClass unifiedClass in allClasses)
    {
        var allAttributes = unifiedClass.GetAllAttributes();
        if (allAttributes.All(_ => !_.Name.StartsWith("AutoBuilder")))
        {
            continue;
        }

        var publicProperties = unifiedClass.GetAllPublicGetters();
        if (publicProperties.Count == 0)
        {
            continue;
        }

		unifiedClass.WriteNamespaceAndClass(() => {
#>
		public Builder ToBuilder()
		{
			var builder = new Builder();
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
			builder.<#= codeProperty.Name #> = this.<#= codeProperty.Name #>;
<#
    }
#>
			return builder;
		}

		public <#= unifiedClass.FirstCodeClass.Name #> Copy(Action<Builder> applyDelta)
		{
			var builder = this.ToBuilder();
			applyDelta(builder);
			return builder.Build();
		}

        public partial class Builder
        {
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
            public <#= codeProperty.Type.AsFullName #> <#= codeProperty.Name #> { get; set; }
<#
    }
#>

			public <#= unifiedClass.FirstCodeClass.Name #> Build()
			{
				return new <#= unifiedClass.FirstCodeClass.Name #>(
<#
    for (var i = 0; i < publicProperties.Count; i++)
    {
        var codeProperty = publicProperties[i];
#>
					this.<#= codeProperty.Name #><#= i < publicProperties.Count - 1 ? ", " : ");" #>
<#
    }
#>
			}
        }
<#
		});
	}
#>